<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Sign Up</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;600&display=swap');

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #e0eafc, #cfdef3);
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      position: relative;
    }

    body::before, body::after {
      content: "";
      position: absolute;
      border-radius: 50%;
      filter: blur(120px);
      opacity: 0.2;
      z-index: 0;
      animation: float 10s ease-in-out infinite;
    }

    body::before {
      width: 450px;
      height: 450px;
      background: #6a11cb;
      top: 5%;
      left: 10%;
    }

    body::after {
      width: 550px;
      height: 550px;
      background: #2575fc;
      bottom: 5%;
      right: 10%;
      animation-delay: 4s;
    }

    @keyframes float {
      0%, 100% { transform: translateY(0); }
      50% { transform: translateY(-20px); }
    }

    .signup-container {
      position: relative;
      z-index: 1;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      box-shadow: 0 8px 32px rgba(0,0,0,0.1);
      border-radius: 25px;
      padding: 50px 40px;
      width: 400px;
      text-align: center;
      animation: fadeInUp 1s ease forwards;
      transform: translateY(30px);
      opacity: 0;
    }

    @keyframes fadeInUp {
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }

    .signup-container:hover {
      box-shadow: 0 12px 50px rgba(0, 0, 0, 0.15);
    }

    h2 {
      font-size: 2.3rem;
      font-weight: 600;
      margin-bottom: 30px;
      color: #333;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    input[type="text"],
    input[type="email"],
    input[type="password"],
    select {
      background: #fff;
      border: 1.5px solid #ccc;
      padding: 14px 18px;
      border-radius: 12px;
      font-size: 1rem;
      color: #111;
      transition: 0.3s ease;
      outline: none;
      width: 100%;
    }

    input:focus,
    select:focus {
      border-color: #6a11cb;
      box-shadow: 0 0 10px rgba(106, 17, 203, 0.3);
    }

    .password-wrapper {
      position: relative;
    }

    .password-wrapper input {
      padding-right: 50px;
    }

    .toggle-password {
      position: absolute;
      right: 15px;
      top: 50%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      font-weight: 600;
      color: #6a11cb;
      font-size: 0.9rem;
      user-select: none;
    }

    input[type="submit"] {
      background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
      border: none;
      border-radius: 15px;
      padding: 15px;
      font-weight: 600;
      font-size: 1.1rem;
      color: white;
      cursor: pointer;
      box-shadow: 0 6px 18px rgba(106, 17, 203, 0.6);
      transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    input[type="submit"]:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 24px rgba(106, 17, 203, 0.4);
    }

    .back-link, .home-button {
      margin-top: 20px;
      color: #555;
      font-size: 0.9rem;
      text-decoration: none;
      display: inline-block;
    }

    .home-button {
      margin-top: 10px;
      background: transparent;
      border: 1.5px solid #6a11cb;
      padding: 8px 18px;
      border-radius: 15px;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .home-button:hover {
      background: #6a11cb;
      color: white;
    }

    .error-message {
      color: #e74c3c;
      font-size: 0.85rem;
      text-align: left;
      margin-top: -10px;
      margin-bottom: 10px;
      display: none;
    }

    input.error {
      border-color: #e74c3c !important;
      box-shadow: 0 0 8px 1px #e74c3c !important;
    }
  </style>
</head>
<body>
  <div class="signup-container">
    <h2>Create Account</h2>
    <form id="signupForm" action="/signup" method="POST" autocomplete="off" novalidate>
      <input type="text" name="name" placeholder="Full Name" required />
      <input type="email" id="email" name="email" placeholder="Email Address" required />
      <div id="emailError" class="error-message">Email already exists.</div>

      <div class="password-wrapper">
        <input type="password" id="password" name="password" placeholder="Password" minlength="6" required />
        <button type="button" id="togglePassword" class="toggle-password">Show</button>
      </div>

      <select name="semester" required>
        <option value="" disabled selected>Select Semester</option>
        <option value="1">Semester 1</option>
        <option value="2">Semester 2</option>
        <option value="3">Semester 3</option>
        <option value="4">Semester 4</option>
        <option value="5">Semester 5</option>
        <option value="6">Semester 6</option>
      </select>

      <input type="submit" id="submitBtn" value="Sign Up" />
    </form>

    <a href="/login" class="back-link">Already have an account? Login</a><br />
    <a href="/" class="home-button">Back to Home</a>
  </div>

  <script>
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('password');
    const emailInput = document.getElementById('email');
    const emailError = document.getElementById('emailError');
    const submitBtn = document.getElementById('submitBtn');
    const form = document.getElementById('signupForm');

    togglePassword.addEventListener('click', () => {
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      togglePassword.textContent = type === 'password' ? 'Show' : 'Hide';
    });

    function checkEmailExists(email) {
      const existingEmails = ['test@example.com', 'user@domain.com', 'admin@site.com'];
      return existingEmails.includes(email.toLowerCase());
    }

    emailInput.addEventListener('blur', () => {
      const email = emailInput.value.trim();
      if (email && checkEmailExists(email)) {
        emailError.style.display = 'block';
        emailInput.classList.add('error');
        submitBtn.disabled = true;
      } else {
        emailError.style.display = 'none';
        emailInput.classList.remove('error');
        submitBtn.disabled = false;
      }
    });

    form.addEventListener('submit', (e) => {
      if (emailInput.classList.contains('error')) {
        e.preventDefault();
        emailInput.focus();
        return;
      }
      const name = form.elements['name'].value.trim();
      const email = form.elements['email'].value.trim();
      const password = form.elements['password'].value.trim();
      const semester = form.elements['semester'].value;

      if (!name || !email || !password || !semester) {
        e.preventDefault();
        alert('Please fill out all fields before signing up.');
      }
    });
  </script>
</body>
</html>
